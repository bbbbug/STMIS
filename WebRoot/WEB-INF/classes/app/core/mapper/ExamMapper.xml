<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="app.core.mapper.ExamMapper" >
  <resultMap id="BaseResultMap" type="app.core.po.Exam" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="caption" property="caption" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="rrange" property="rrange" jdbcType="VARCHAR" />
    <result column="kcjs" property="kcjs" jdbcType="VARCHAR" />
    <result column="sjlb" property="sjlb" jdbcType="VARCHAR" />
    <result column="kcbh" property="kcbh" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, caption, answer, rrange, kcjs, sjlb, kcbh
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="app.core.po.ExamExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from exam
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from exam
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="app.core.po.ExamExample" >
    delete from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="app.core.po.Exam" >
    insert into exam (id, caption, answer, 
      rrange, kcjs, sjlb, 
      kcbh)
    values (#{id,jdbcType=BIGINT}, #{caption,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, 
      #{rrange,jdbcType=VARCHAR}, #{kcjs,jdbcType=VARCHAR}, #{sjlb,jdbcType=VARCHAR}, 
      #{kcbh,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="app.core.po.Exam" >
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="caption != null" >
        caption,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="rrange != null" >
        rrange,
      </if>
      <if test="kcjs != null" >
        kcjs,
      </if>
      <if test="sjlb != null" >
        sjlb,
      </if>
      <if test="kcbh != null" >
        kcbh,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="caption != null" >
        #{caption,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="rrange != null" >
        #{rrange,jdbcType=VARCHAR},
      </if>
      <if test="kcjs != null" >
        #{kcjs,jdbcType=VARCHAR},
      </if>
      <if test="sjlb != null" >
        #{sjlb,jdbcType=VARCHAR},
      </if>
      <if test="kcbh != null" >
        #{kcbh,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="app.core.po.ExamExample" resultType="java.lang.Integer" >
    select count(*) from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exam
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.caption != null" >
        caption = #{record.caption,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null" >
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.rrange != null" >
        rrange = #{record.rrange,jdbcType=VARCHAR},
      </if>
      <if test="record.kcjs != null" >
        kcjs = #{record.kcjs,jdbcType=VARCHAR},
      </if>
      <if test="record.sjlb != null" >
        sjlb = #{record.sjlb,jdbcType=VARCHAR},
      </if>
      <if test="record.kcbh != null" >
        kcbh = #{record.kcbh,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exam
    set id = #{record.id,jdbcType=BIGINT},
      caption = #{record.caption,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      rrange = #{record.rrange,jdbcType=VARCHAR},
      kcjs = #{record.kcjs,jdbcType=VARCHAR},
      sjlb = #{record.sjlb,jdbcType=VARCHAR},
      kcbh = #{record.kcbh,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="app.core.po.Exam" >
    update exam
    <set >
      <if test="caption != null" >
        caption = #{exam.caption,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{exam.answer,jdbcType=VARCHAR},
      </if>
      <if test="rrange != null" >
        rrange = #{exam.rrange,jdbcType=VARCHAR},
      </if>
      <if test="kcjs != null" >
        kcjs = #{exam.kcjs,jdbcType=VARCHAR},
      </if>
      <if test="sjlb != null" >
        sjlb = #{exam.sjlb,jdbcType=VARCHAR},
      </if>
      <if test="kcbh != null" >
        kcbh = #{exam.kcbh,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{exam.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="app.core.po.Exam" >
    update exam
    set caption = #{caption,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      rrange = #{rrange,jdbcType=VARCHAR},
      kcjs = #{kcjs,jdbcType=VARCHAR},
      sjlb = #{sjlb,jdbcType=VARCHAR},
      kcbh = #{kcbh,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
 <select id="adminShowExam" resultMap="BaseResultMap" parameterType="app.core.po.Exam" >
    select * from Exam
     	<where>
     		KCJS = #{kcjs,jdbcType=VARCHAR}
     	</where>
  </select>
  
  <select id="startExam" resultMap="BaseResultMap" parameterType="map" >
    select * from Exam where kcbh = #{exam.kcbh} ORDER BY RAND() LIMIT #{bxzd2}

  </select>
   <select id="checkExamResult" resultMap="BaseResultMap" parameterType="app.core.po.Exam" >
    select * from Exam
     	<where>
     		id = #{id,jdbcType=BIGINT}
     	</where>
  </select>
    <!-- author by Jaylin_Yang at 2019.5.15 -->
  <select id="selectExamByKcbhKcjs" resultMap="BaseResultMap" parameterType="app.core.po.Exam" >
    select * from Exam
     	<where>
     		KCJS = #{kcjs,jdbcType=VARCHAR} and KCBH = #{kcbh,jdbcType=VARCHAR}
     	</where>
  </select>
  
  <select id="searchFromExam" resultMap="BaseResultMap" parameterType="String" >
    select * from Exam
     	<where>
     		( caption like CONCAT(CONCAT('%',#{caption}),'%') or answer like CONCAT(CONCAT('%',#{caption}),'%') 
			or rrange like CONCAT(CONCAT('%',#{caption}),'%') or kcjs like CONCAT(CONCAT('%',#{caption}),'%')
			or sjlb like CONCAT(CONCAT('%',#{caption}),'%') or kcbh like CONCAT(CONCAT('%',#{caption}),'%'))
     	</where>
  </select>
  
</mapper>