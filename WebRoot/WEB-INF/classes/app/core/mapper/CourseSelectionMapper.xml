<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="app.core.mapper.CourseSelectionMapper" >
  <resultMap id="BaseResultMap" type="app.core.po.CourseSelection" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="YGZH" property="ygzh" jdbcType="VARCHAR" />
    <result column="KCBH" property="kcbh" jdbcType="VARCHAR" />
    <result column="kcjd" property="kcjd" jdbcType="INTEGER" />
    <result column="Fraction" property="fraction" jdbcType="VARCHAR" />
    <result column="BXZD_2" property="bxzd2" jdbcType="VARCHAR" />
    <result column="threshold" property="threshold" jdbcType="INTEGER" />
  </resultMap>
  <!-- 自定义 -->
  <!-- 管理员 -->
  <!-- 获取所有员工学分 -->
  <select id="getAllCourseSelection" resultType="CourseSelection">
  	select * from course_selection where kcjd = 2 order by YGZH
  </select>
  <!-- 根据id查询对应的员工选课学分 -->
  <select id="viewCourseSelection" resultType="CourseSelection" parameterType="CourseSelection">
  	select * from course_selection where kcjd = 2 and ID =#{id}
  </select>
  <select id="getCourseSelectionByCondition" resultType="CourseSelection" parameterType="CourseSelection">
  	select * from course_selection
  	<where>
  		<if test="ygzh!=null">
  			and YGZH like CONCAT(CONCAT('%',#{ygzh},'%')) and kcjd = 2  			
  		</if>
  		<if test="kcbh!=null">
  			and KCBH like CONCAT(CONCAT('%',#{kcbh},'%')) and kcjd = 2
  		</if>
  	</where>
  </select>
  <select id="sortCourseSelectionListByCondition" parameterType="String" resultType="CourseSelection">
  	  	select * from course_selection where kcjd = 2
  	<if test="condition=='YGZH'">
  		order by YGZH asc
  	</if>
  	<if test="condition=='YGXF'">
  		order by threshold desc
  	</if>
  	<if test="condition=='YGCJ'">
  		order by Fraction desc
  	</if>
  </select>
  <!-- 管理员 -->
   
 <!-- author by Jaylin_yang 2019.6.26 -->
 <resultMap id="EndResultMap" type="app.core.po.CourseSelection">
 		<id property="id" column="id"/>
			<result column="YGZH" property="ygzh" jdbcType="VARCHAR" />
		    <result column="KCBH" property="kcbh" jdbcType="VARCHAR" />
		    <result column="kcjd" property="kcjd" jdbcType="INTEGER" />
		    <result column="Fraction" property="fraction" jdbcType="VARCHAR" />
	    <association property="courseType" javaType="app.core.po.CourseType">
			<id column="ID" property="id" jdbcType="INTEGER" />
		    <result column="KCBH" property="kcbh" jdbcType="VARCHAR" />
		    <result column="KCMC" property="kcmc" jdbcType="VARCHAR" />
		    <result column="BMID" property="bmid" jdbcType="INTEGER" />
		    <result column="BMMC" property="bmmc" jdbcType="VARCHAR" />
		    <result column="JZSJ" property="jzsj" jdbcType="TIMESTAMP" />
		    <result column="XXBX" property="xxbx" jdbcType="VARCHAR" />
		</association>
 </resultMap>
 
 <select id="selectYGDetialFrom2" resultMap="EndResultMap" parameterType="java.lang.String" >
    select * from course_type c, course_selection cs  
    where ygzh = #{ygzh,jdbcType=VARCHAR} and c.kcbh = cs.kcbh and c.BMID = 
    (select YGDWBH from employee where YGZH = #{ygzh,jdbcType=VARCHAR} limit 1) order by c.xxbx,cs.fraction asc
 </select>
  <!-- 自定义 -->
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, YGZH, KCBH, kcjd, Fraction, BXZD_2, threshold
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="app.core.po.CourseSelectionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_selection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course_selection
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course_selection
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="app.core.po.CourseSelectionExample" >
    delete from course_selection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="app.core.po.CourseSelection" >
    insert into course_selection (ID, YGZH, KCBH, 
      kcjd, Fraction, BXZD_2
      )
    values (#{id,jdbcType=INTEGER}, #{ygzh,jdbcType=VARCHAR}, #{kcbh,jdbcType=VARCHAR}, 
      #{kcjd,jdbcType=INTEGER}, #{fraction,jdbcType=VARCHAR}, #{bxzd2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="app.core.po.CourseSelection" >
    insert into course_selection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="ygzh != null" >
        YGZH,
      </if>
      <if test="kcbh != null" >
        KCBH,
      </if>
      <if test="kcjd != null" >
        kcjd,
      </if>
      <if test="fraction != null" >
        Fraction,
      </if>
      <if test="bxzd2 != null" >
        BXZD_2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ygzh != null" >
        #{ygzh,jdbcType=VARCHAR},
      </if>
      <if test="kcbh != null" >
        #{kcbh,jdbcType=VARCHAR},
      </if>
      <if test="kcjd != null" >
        #{kcjd,jdbcType=INTEGER},
      </if>
      <if test="fraction != null" >
        #{fraction,jdbcType=VARCHAR},
      </if>
      <if test="bxzd2 != null" >
        #{bxzd2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="app.core.po.CourseSelectionExample" resultType="java.lang.Integer" >
    select count(*) from course_selection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course_selection
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ygzh != null" >
        YGZH = #{record.ygzh,jdbcType=VARCHAR},
      </if>
      <if test="record.kcbh != null" >
        KCBH = #{record.kcbh,jdbcType=VARCHAR},
      </if>
      <if test="record.kcjd != null" >
        kcjd = #{record.kcjd,jdbcType=INTEGER},
      </if>
      <if test="record.fraction != null" >
        Fraction = #{record.fraction,jdbcType=VARCHAR},
      </if>
      <if test="record.bxzd2 != null" >
        BXZD_2 = #{record.bxzd2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course_selection
    set ID = #{record.id,jdbcType=INTEGER},
      YGZH = #{record.ygzh,jdbcType=VARCHAR},
      KCBH = #{record.kcbh,jdbcType=VARCHAR},
      kcjd = #{record.kcjd,jdbcType=INTEGER},
      Fraction = #{record.fraction,jdbcType=VARCHAR},
      BXZD_2 = #{record.bxzd2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="app.core.po.CourseSelection" >
    update course_selection
    <set >
      <if test="ygzh != null" >
        YGZH = #{ygzh,jdbcType=VARCHAR},
      </if>
      <if test="kcbh != null" >
        KCBH = #{kcbh,jdbcType=VARCHAR},
      </if>
      <if test="kcjd != null" >
        kcjd = #{kcjd,jdbcType=INTEGER},
      </if>
      <if test="fraction != null" >
        Fraction = #{fraction,jdbcType=VARCHAR},
      </if>
      <if test="bxzd2 != null" >
        BXZD_2 = #{bxzd2,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="app.core.po.CourseSelection" >
    update course_selection
    set YGZH = #{ygzh,jdbcType=VARCHAR},
      KCBH = #{kcbh,jdbcType=VARCHAR},
      kcjd = #{kcjd,jdbcType=INTEGER},
      Fraction = #{fraction,jdbcType=VARCHAR},
      BXZD_2 = #{bxzd2,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
   <insert id="addCartCourse" parameterType="app.core.po.CourseSelection" >
    insert into course_selection (YGZH, KCBH)
    values (#{ygzh,jdbcType=VARCHAR}, #{kcbh,jdbcType=VARCHAR})
  </insert>
  
 <resultMap id="ClassResultMap" type="app.core.po.Course">
 		<id property="id" column="id"/>
			 <result column="KCMC" property="kcmc" jdbcType="VARCHAR" />
			  <result column="KCBH" property="kcbh" jdbcType="VARCHAR" />
		    <result column="KCLB" property="kclb" jdbcType="VARCHAR" />
		    <result column="KCJJ" property="kcjj" jdbcType="VARCHAR" />
		    <result column="KCJS" property="kcjs" jdbcType="VARCHAR" />
		    <result column="KCZT" property="kczt" jdbcType="INTEGER" />
		    <result column="KCXF" property="kcxf" jdbcType="INTEGER" />
		    <result column="KCTB" property="kctb" jdbcType="VARCHAR" />
	    <association property="courseSelection" javaType="app.core.po.CourseSelection">
			<id property="id" column="id"/>
			<result column="ID" property="id" jdbcType="INTEGER" />
			<result column="YGZH" property="ygzh" jdbcType="VARCHAR" />
		    <result column="KCBH" property="kcbh" jdbcType="VARCHAR" />
		    <result column="KCJD" property="kcjd" jdbcType="INTEGER" />
		    <result column="Fraction" property="fraction" jdbcType="VARCHAR" />
		    <result column="BXZD_2" property="bxzd2" jdbcType="VARCHAR" />
		    <result column="threshold" property="threshold" jdbcType="INTEGER" />
		</association>
 </resultMap>

  <select id="checkCourse" resultType="java.lang.Integer" parameterType="app.core.po.CourseSelection" >
    select count(*) from course_selection
    where ygzh = #{ygzh} and kcbh = #{kcbh}
  </select>
 <select id="showMyCourse" resultMap="ClassResultMap" parameterType="app.core.po.CourseSelection" >
    select * from course c, course_selection cs  
    where Fraction is null and ygzh = #{ygzh,jdbcType=VARCHAR} and c.kcbh = cs.kcbh   order by cs.kcjd
 </select>
 
 <select id="gotoCredit" resultMap="ClassResultMap" parameterType="app.core.po.CourseSelection" >
     select * from course c, course_selection cs  
    where ygzh = #{ygzh,jdbcType=VARCHAR} and c.kcbh = cs.kcbh and fraction is not null 
 </select>
 <!-- select * from course c, course_selection cs  
    where ygzh = #{ygzh,jdbcType=VARCHAR} and c.kcbh = cs.kcbh  order by isnull(fraction),fraction DESC  -->
 
 <delete id="removeCourse" parameterType="app.core.po.CourseSelection" >
    delete from course_selection
    where ygzh = #{ygzh} and kcbh = #{kcbh}
 </delete>
 
 <update id="saveFraction" parameterType="app.core.po.CourseSelection" >
    update course_selection set fraction = #{fraction,jdbcType=VARCHAR} , threshold=#{threshold}
     where ygzh = #{ygzh} and kcbh = #{kcbh}
  </update>
  
 <select id="checkFraction" resultMap="BaseResultMap" parameterType="app.core.po.CourseSelection" >
    select * from course_selection
    where ygzh = #{ygzh} and kcbh = #{kcbh}
 </select>
 
  <select id="checkCourseSelection" resultMap="BaseResultMap" parameterType="app.core.po.CourseSelection" >
    select * from course_selection
    where ygzh = #{ygzh} and kcbh = #{kcbh}
 </select>
 
 <update id="proCourseJD" parameterType="app.core.po.CourseSelection" >
    update course_selection set kcjd = 1
     where ygzh = #{ygzh} and kcbh = #{kcbh} and kcjd=0
  </update>
 <update id="updateKCJD" parameterType="app.core.po.CourseSelection" >
    update course_selection set kcjd = 2
     where ygzh = #{ygzh} and kcbh = #{kcbh} and kcjd >0
 </update>
  <select id="selectReCourse" resultMap="BaseResultMap" parameterType="app.core.po.CourseSelection" >
  select kcbh,count(*) as count from course_selection group by kcbh having count > 1 and (kcbh like CONCAT(CONCAT('%',#{kcbh}),'%')) order by count desc limit 5;  
  </select>
 <!-- select kcbh,count(*) as count from course_selection group by kcbh having count > #{threshold} and (kcbh like CONCAT(CONCAT('%',#{kcbh}),'%')); -->
  <select id="learnCount" parameterType="app.core.po.CourseSelection" resultType="java.lang.Integer" >
    select count(*) from course_selection where kcbh=#{kcbh}
  </select>
  <select id="showHotCourse" resultMap="BaseResultMap" parameterType="app.core.po.Page" >
  	<!-- select kcbh,count(*) as count from course_selection group by kcbh order by count desc limit #{startPage},#{size};  
  	 -->
  	 select kcbh from course order by id asc limit #{startPage},#{size};  
  </select>
  <update id="updateKCXF" parameterType="app.core.po.CourseSelection" >
    update course_selection set threshold = #{threshold}
     where ygzh = #{ygzh} and kcbh = #{kcbh}
 </update>
</mapper>